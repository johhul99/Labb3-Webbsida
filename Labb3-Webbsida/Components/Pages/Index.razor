@page "/"
@inject HttpClient Http
@rendermode InteractiveServer

<PageTitle>Home</PageTitle>

<div class="row">
    <div class="col-12 col-md-4 text-start">
        <h4>Kontaktuppgifter</h4>
        <p>Sörgårdsvägen 2<br>433 61, Sävedalen<br>0739631701<br><a href="mailto:johan.hultin99@gmail.com">johan.hultin99@gmail.com</a><br /> <a href="https://www.linkedin.com/in/johan-hultin-391a69346/" target="_blank">LinkedIn</a> </p>
        <b>Körkort</b>
        <p>B</p>
        <b>Födelsedatum</b>
        <p>1999-03-25</p>
        <b>Språk</b>
        <p>Svenska - Modersmål</p>
        <p>Engelska - Flytande</p>
    </div>

    <div class="col-12 col-md-8 text-start">
        <h4>Profil</h4>
        <p>
            Nyfiken och driven student som läser .NET Cloud Developer vid IT Högskolan i Mölndal sedan augusti 2024.
            En fascination för datorer och teknologi som suttit i sedan tidig barndom har utvecklats till en passion för problemlösning och systemutveckling,
            vilket gjort valet av karriär både självklart och inspirerande.
        </p>
        <p>
            Varje nytt område inom utbildningen har varit både spännande och roligt.
            Högsta betyg i kurser som; Programmering med C#, Databasutveckling och Webbutveckling ger mersmak.
        </p>
        <p>
            Erfarenheter från att arbeta i team, både som medarbetare och ledare, har utvecklat samarbets- och kommunikationsförmågan i en uppsjö miljöer.
            Med teknisk kompetens, engagemang och kreativitet är målet att bidra med lösningar som gör skillnad.
        </p>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-12 col-md-6 text-start">
        <div class="card p-3 mb-3">
            <h4>Projekt</h4>

            <table class="table table-striped">
                <thead>
                    <tr>
                        <th>Namn</th>
                        <th>Beskrivning</th>
                        <th>Tech Stack</th>
                    </tr>
                </thead>
                <tbody>
                    <tr>
                        <td><strong>API Display</strong></td>
                        <td>
                            Ett .NET API kopplat mot en databas,
                            ett Node API som hämtar innehållet av databasen från .NET API och displayar i en enkel frontend.
                        </td>
                        <td>Javascript, Node, HTML & CSS, Bootstrap, Microsoft Azure, MongoDB, .NET, REST API</td>
                    </tr>
                    <tr>
                        <td><strong>Webbshop Fullstack</strong></td>
                        <td>
                            En webbsida innehållande information om ett fiktivt företag och deras shop, kopplad till ett API som hanterar beställningar.
                        </td>
                        <td>Javascript, HTML & CSS, Bootstrap, Microsoft Azure, MongoDB, .NET, REST API</td>
                    </tr>
                    <tr>
                        <td><strong>WPF Lagerhantering Bokhandel</strong></td>
                        <td>
                            WPF-applikation för hantering av bokhandelns lager, med möjlighet att hantera böcker, författare och butiker.
                        </td>
                        <td>.NET, Microsoft Azure, SQL</td>
                    </tr>
                    <tr>
                        <td><strong>WPF MVVM Beställningsportal</strong></td>
                        <td>
                            WPF-applikation för hantering av kundbeställningar, kunder och produkter, med filtreringsfunktion.
                        </td>
                        <td>.NET</td>
                    </tr>
                    <tr>
                        <td><strong>Console Application Butik</strong></td>
                        <td>
                            Konsolapplikation där användaren kan registrera sig, logga in och handla i olika valutor, spara sin kundvagn mellan körningar, kopplad till en databas.
                        </td>
                        <td>.NET, SQL</td>
                    </tr>
                </tbody>
            </table>
        </div>
    </div>


    <div class="col-12 col-md-6 text-start">
        <div class="card p-3 mb-3">
            <h4>Kompetens</h4>
            @if (Technologies.Count == 0)
            {
                <p>Laddar kompetenser...</p>
            }
            else
            {
                <table class="table table-striped">
                    <thead>
                        <tr>
                            <th>Namn</th>
                            <th>Erfarenhet (år)</th>
                            <th>Kunskapsnivå</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var technology in Technologies)
                        {
                            <tr>
                                <td>@technology.Name</td>
                                <td>@technology.YearsOfExperience</td>
                                <td>@technology.SkillLevel</td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

</div>

<div class="row">
    <div class="col-12 text-start">
        <div class="card p-3 mb-3">
            <h4>Utbildning</h4>
            <ul class="list-group">
                <li class="list-group-item">
                    <strong>IT Högskolan, Mölndal</strong>
                    <p>Augusti 2024 – Juni 2026</p>
                </li>
                <li class="list-group-item">
                    <strong>Sjölins Gymnasium, Göteborg</strong>
                    <p>Augusti 2015 – Juni 2018</p>
                </li>
            </ul>
        </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-12 text-start">
        <div class="card p-3 mb-3">
            <h4>Arbetslivserfarenhet</h4>
            <ul class="list-group">
                <li class="list-group-item"><strong>Säljare</strong>, Smarteyes, Synoptik Sweden AB, Göteborg (Feb 2024 - Aug 2024)</li>
                <li class="list-group-item"><strong>Ambulerande konsult, lager</strong>, Pokayoke AB, Göteborg (Aug 2023 - Feb 2024)</li>
                <li class="list-group-item"><strong>Entrévärd</strong>, Balambaras - Cocktailbar, Lounge & Nightclub (Maj 2022 - Juli 2023)</li>
                <li class="list-group-item"><strong>Säljare</strong>, Increment Security Group Gothia AB (Jan 2021 - Apr 2022)</li>
                <li class="list-group-item"><strong>Teamleader & Säljare</strong>, Abonnemangsbutiken, Göteborg (Aug 2020 - Dec 2020)</li>
                <li class="list-group-item"><strong>Egen Verksamhet</strong>, Actual High End, Göteborg (Aug 2019 - Aug 2020)</li>
                <li class="list-group-item"><strong>Teamleader & Säljare</strong>, MobileGroup Nordic AB, Göteborg (Aug 2018 - Sep 2019)</li>
                <li class="list-group-item"><strong>Låneförmedlare</strong>, Enklare Ekonomi Sverige AB, Göteborg (Maj 2018 - Aug 2018)</li>
                <li class="list-group-item"><strong>Medarbetare</strong>, McDonald's, Partille (Okt 2016 - Aug 2017)</li>
            </ul>
        </div>
    </div>
</div>

<hr />

<div class="row">
    <div class="col-12 text-center">
        <div class="card p-3 mb-3">
            <h4>Min GitHub-profil</h4>
            @if (GitHubData != null && !string.IsNullOrEmpty(GitHubData.login))
            {
                <img src="@GitHubData.avatar_url" alt="GitHub avatar" class="rounded-circle" width="150">
                <h3>@GitHubData.name (@GitHubData.login)</h3>
                <p>Publika repositories: @GitHubData.public_repos</p>
                <a href="@GitHubData.html_url" target="_blank" class="btn btn-primary">Besök min GitHub-profil</a>
            }
            else
            {
                <p>Laddar GitHub-profil...</p>
            }
        </div>
    </div>
</div>







@code {
    List<Technology> Technologies = new List<Technology>();
    GitHubProfile GitHubData = new GitHubProfile();

    protected override async Task OnInitializedAsync()
    {
        await LoadTechnologies();
        await LoadGitHubProfile();
    }

    public async Task LoadTechnologies()
    {
        Technologies = await Http.GetFromJsonAsync<List<Technology>>("https://labb3-techapi.azurewebsites.net/technologies");
    }

    public async Task LoadGitHubProfile()
    {
        try
        {
            var request = new HttpRequestMessage(HttpMethod.Get, $"https://api.github.com/users/johhul99");
            request.Headers.Add("User-Agent", "BlazorApp");

            var response = await Http.SendAsync(request);

            if (response.IsSuccessStatusCode)
            {
                GitHubData = await response.Content.ReadFromJsonAsync<GitHubProfile>();
            }
            else
            {
                Console.WriteLine($"GitHub API gav fel: {response.StatusCode}");
            }
        }
        catch (Exception ex)
        {
            Console.WriteLine($"Kunde inte hämta GitHub-profil: {ex.Message}");
        }
    }


    public class Technology
    {
        public string Id { get; set; }
        public string Name { get; set; }
        public int YearsOfExperience { get; set; }
        public string SkillLevel { get; set; }
    }

    public class GitHubProfile
    {
        public string login { get; set; }
        public string avatar_url { get; set; }
        public string html_url { get; set; }
        public string name { get; set; }
        public int public_repos { get; set; }
    }
}